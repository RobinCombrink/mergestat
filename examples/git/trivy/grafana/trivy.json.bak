{
    "__inputs": [
      {
        "name": "DS_POSTGRES",
        "label": "Postgres Local",
        "description": "",
        "type": "datasource",
        "pluginId": "postgres",
        "pluginName": "PostgreSQL"
      }
    ],
    "__elements": {},
    "__requires": [
      {
        "type": "panel",
        "id": "barchart",
        "name": "Bar chart",
        "version": ""
      },
      {
        "type": "grafana",
        "id": "grafana",
        "name": "Grafana",
        "version": "9.0.6"
      },
      {
        "type": "datasource",
        "id": "postgres",
        "name": "PostgreSQL",
        "version": "1.0.0"
      },
      {
        "type": "panel",
        "id": "stat",
        "name": "Stat",
        "version": ""
      },
      {
        "type": "panel",
        "id": "table",
        "name": "Table",
        "version": ""
      }
    ],
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "datasource",
            "uid": "grafana"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "target": {
            "limit": 100,
            "matchAny": false,
            "tags": [],
            "type": "dashboard"
          },
          "type": "dashboard"
        }
      ]
    },
    "description": "",
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 1,
    "id": null,
    "links": [],
    "liveNow": true,
    "panels": [
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRES}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "dark-red",
                  "value": 1
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 0
        },
        "id": 4,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [],
            "fields": "/^total_vulnerabilities$/",
            "values": true
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.0.6",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRES}"
            },
            "format": "table",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT\n    COUNT(*) AS total_vulnerabilities\nFROM public.trivy_repo_vulnerabilities\nINNER JOIN public.repos ON public.repos.id = public.trivy_repo_vulnerabilities.repo_id\nINNER JOIN public.github_repo_info ON public.trivy_repo_vulnerabilities.repo_id = public.github_repo_info.repo_id\nWHERE public.trivy_repo_vulnerabilities.vulnerability_severity = 'CRITICAL'\nAND (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? (public.github_repo_info.owner || '/' || public.github_repo_info.name)) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (public.repos.tags @> '${repository_tags:json}'::jsonb) ELSE true END)\n",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Total Critical Vulnerabilities",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRES}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "fillOpacity": 80,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineWidth": 1,
              "scaleDistribution": {
                "type": "linear"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "transparent",
                  "value": null
                }
              ]
            },
            "unit": "locale"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "unknown"
              },
              "properties": [
                {
                  "id": "thresholds",
                  "value": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "blue",
                        "value": null
                      }
                    ]
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "low"
              },
              "properties": [
                {
                  "id": "thresholds",
                  "value": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "super-light-yellow",
                        "value": null
                      }
                    ]
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "medium"
              },
              "properties": [
                {
                  "id": "thresholds",
                  "value": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "super-light-orange",
                        "value": null
                      }
                    ]
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "high"
              },
              "properties": [
                {
                  "id": "thresholds",
                  "value": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "red",
                        "value": null
                      }
                    ]
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "critical"
              },
              "properties": [
                {
                  "id": "thresholds",
                  "value": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "dark-red",
                        "value": null
                      }
                    ]
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "total_vulnerabilities"
              },
              "properties": [
                {
                  "id": "custom.hideFrom",
                  "value": {
                    "legend": true,
                    "tooltip": true,
                    "viz": true
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 0
        },
        "id": 2,
        "options": {
          "barRadius": 0,
          "barWidth": 0.97,
          "groupWidth": 0.7,
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom"
          },
          "orientation": "horizontal",
          "showValue": "never",
          "stacking": "normal",
          "tooltip": {
            "mode": "multi",
            "sort": "none"
          },
          "xField": "base_repository_name",
          "xTickLabelRotation": 0,
          "xTickLabelSpacing": 0
        },
        "pluginVersion": "9.0.6",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRES}"
            },
            "format": "table",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT\n    public.github_repo_info.owner || '/' || public.github_repo_info.name AS base_repository_name,\n    COUNT(case when (vulnerability_severity='UNKNOWN') then 1 else NULL end) as unknown,\n    COUNT(case when (vulnerability_severity='LOW') then 1 else NULL end) as low,\n    COUNT(case when (vulnerability_severity='MEDIUM') then 1 else NULL end) as medium,\n    COUNT(case when (vulnerability_severity='HIGH') then 1 else NULL end) as high,\n    COUNT(case when (vulnerability_severity='CRITICAL') then 1 else NULL end) as critical,\n    COUNT(*) AS total_vulnerabilities\nFROM public.trivy_repo_vulnerabilities\nINNER JOIN public.repos ON public.repos.id = public.trivy_repo_vulnerabilities.repo_id\nINNER JOIN public.github_repo_info ON public.trivy_repo_vulnerabilities.repo_id = public.github_repo_info.repo_id\nWHERE (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? (public.github_repo_info.owner || '/' || public.github_repo_info.name)) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (public.repos.tags @> '${repository_tags:json}'::jsonb) ELSE true END)\nGROUP BY 1\nORDER BY 7 DESC\n",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Vulnerabilities by Repo",
        "type": "barchart"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRES}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "auto",
              "displayMode": "auto",
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "repo"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 245
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "vulnerability_id"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 212
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 11,
          "w": 24,
          "x": 0,
          "y": 8
        },
        "id": 6,
        "options": {
          "footer": {
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": []
        },
        "pluginVersion": "9.0.6",
        "targets": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "${DS_POSTGRES}"
            },
            "format": "table",
            "group": [],
            "metricColumn": "none",
            "rawQuery": true,
            "rawSql": "SELECT\n    (public.github_repo_info.owner || '/' || public.github_repo_info.name) as repo,\n    public.trivy_repo_vulnerabilities.vulnerability_id,\n    public.trivy_repo_vulnerabilities.vulnerability_title,\n    JSON_EXTRACT_PATH_TEXT(public.trivy_repo_vulnerabilities.vulnerability::json, variadic '{PublishedDate}') AS PublishedDate,\n    JSON_EXTRACT_PATH_TEXT(public.trivy_repo_vulnerabilities.vulnerability::json, variadic '{FixedVersion}') AS FixedVersion,\n    public.trivy_repo_vulnerabilities.vulnerability_installed_version\nFROM public.trivy_repo_vulnerabilities\nINNER JOIN public.repos ON public.repos.id = public.trivy_repo_vulnerabilities.repo_id\nINNER JOIN public.github_repo_info ON public.trivy_repo_vulnerabilities.repo_id = public.github_repo_info.repo_id\nWHERE public.trivy_repo_vulnerabilities.vulnerability_severity = 'CRITICAL'\nAND (CASE WHEN jsonb_array_length('${repositories:json}'::jsonb) <> 0 THEN ('${repositories:json}'::jsonb ? (public.github_repo_info.owner || '/' || public.github_repo_info.name)) ELSE true END)\nAND (CASE WHEN jsonb_array_length('${repository_tags:json}'::jsonb) <> 0 THEN (public.repos.tags @> '${repository_tags:json}'::jsonb) ELSE true END)\nORDER BY 1",
            "refId": "A",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "timeColumn": "time",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }
        ],
        "title": "Critical Vulnerabilities",
        "type": "table"
      }
    ],
    "schemaVersion": 36,
    "style": "dark",
    "tags": [],
    "templating": {
      "list": [
        {
          "current": {},
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRES}"
          },
          "definition": "SELECT owner || '/' || name FROM github_repo_info JOIN repos ON github_repo_info.repo_id = repos.id",
          "description": "All repositories indexed by MergeStat",
          "hide": 0,
          "includeAll": true,
          "label": "Repositories",
          "multi": true,
          "name": "repositories",
          "options": [],
          "query": "SELECT owner || '/' || name FROM github_repo_info JOIN repos ON github_repo_info.repo_id = repos.id",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "allValue": "[]",
          "current": {},
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRES}"
          },
          "definition": "SELECT DISTINCT value FROM repos, jsonb_array_elements_text(tags) ",
          "description": "Filter by repos with specific tags. If \"All\" is selected, any repo will match (including those without tags)",
          "hide": 0,
          "includeAll": true,
          "label": "Repository Tags",
          "multi": true,
          "name": "repository_tags",
          "options": [],
          "query": "SELECT DISTINCT value FROM repos, jsonb_array_elements_text(tags) ",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        }
      ]
    },
    "time": {
      "from": "now-90d",
      "to": "now"
    },
    "timepicker": {
      "hidden": true
    },
    "timezone": "",
    "title": "Trivy",
    "uid": "PyNLihsdf",
    "version": 10,
    "weekStart": "monday"
  }